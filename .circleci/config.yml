# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          name: Download and cache dependencies 
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python test.py

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "4c:b0:b1:c3:17:0d:bf:e1:29:92:da:aa:85:fe:63:e9"
      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push --force git@heroku.com:portal-master-api.git HEAD:refs/heads/master
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              git push --force git@heroku.com:portal-master-api-stanging.git HEAD:refs/heads/staging
            else
              echo "Not master branch so not deploying"
            fi